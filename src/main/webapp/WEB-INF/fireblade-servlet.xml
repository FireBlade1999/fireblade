<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
                          http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <!-- This file contains web-related beans like controllers, view resolvers, locale 
    resolvers and hanlder mapping. It is an extension of the plain application-context -->


    <!-- declare more explicit support for annotation-driven MVC controllers than 
    does context:annotation-config, such as @Controller, @RequestMapping etc (spring 3)-->
    <mvc:annotation-driven />
    
    <!-- Url mappings -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <value>
                /health=urlFilenameViewController
            </value>
        </property>
    </bean>
    
    <!-- controllers -->
    <!-- component-scan scans the classpath where 'base-package' would be a common
    parent package for the classes -->
    <context:component-scan base-package="org.fireblade.pixel.server" />
    
    <!-- map controller url to view name (e.g. /health -> health). 
    This transforms the virtual path of a url into a view name and returns the
    view. Use this for any pages you want to serve in the MVC engine which are static.
    the requested html resource is converted into a token, which the view resolver 
    then uses to look in the correct folder, (e.g. WEB-INF/views/) -->
    <bean id="urlFilenameViewController" class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />    

    <!-- view resolvers -->
    <!-- map controller url to a jsp view (e.g. health -> /WEB-INF/views/health.jsp) 
    using InternalResourceViewResolver. Prefix + view name + suffix.   -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    
</beans>